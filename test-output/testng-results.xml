<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="70813" started-at="2020-01-04T06:41:47Z" finished-at="2020-01-04T06:42:58Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="70813" started-at="2020-01-04T06:41:47Z" finished-at="2020-01-04T06:42:58Z">
      <class name="com.demo.test.NinjaStoreLoginTest">
        <test-method status="PASS" signature="initilizeReport()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="initilizeReport" is-config="true" duration-ms="191" started-at="2020-01-04T06:41:47Z" finished-at="2020-01-04T06:41:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeReport -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="beforeMethod" is-config="true" duration-ms="23584" started-at="2020-01-04T06:41:47Z" finished-at="2020-01-04T06:42:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.demo.test.NinjaStoreLoginTest.loginWithInvalidCredentials() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loginWithInvalidCredentials()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="loginWithInvalidCredentials" duration-ms="16" started-at="2020-01-04T06:42:10Z" finished-at="2020-01-04T06:42:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="afterMethod" is-config="true" duration-ms="549" started-at="2020-01-04T06:42:10Z" finished-at="2020-01-04T06:42:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="beforeMethod" is-config="true" duration-ms="22815" started-at="2020-01-04T06:42:11Z" finished-at="2020-01-04T06:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qa]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.demo.test.NinjaStoreLoginTest.loginWithValidCredentials() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="loginWithValidCredentials()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="loginWithValidCredentials" duration-ms="23207" started-at="2020-01-04T06:42:34Z" finished-at="2020-01-04T06:42:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.demo.actions.NinjaStoreLoginAction.amzonlogin(NinjaStoreLoginAction.java:50)
at com.demo.test.NinjaStoreLoginTest.loginWithValidCredentials(NinjaStoreLoginTest.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="afterMethod" is-config="true" duration-ms="549" started-at="2020-01-04T06:42:57Z" finished-at="2020-01-04T06:42:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cleanUpReport()[pri:0, instance:com.demo.test.NinjaStoreLoginTest@12d3a4e9]" name="cleanUpReport" is-config="true" duration-ms="1060" started-at="2020-01-04T06:42:58Z" finished-at="2020-01-04T06:42:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUpReport -->
      </class> <!-- com.demo.test.NinjaStoreLoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
